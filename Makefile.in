
CC = @CC@
RM = @RM@
MKDEP = ${CC} -MM

TCMLIBS = @LIBS@
INCLUDES = -I./include
CPPFLAGS = ${INCLUDES} @CPPFLAGS@

# Any other defines you need, add below.
DEFINES =

# -O for optimization.  Can't debug.  Use -g for debuggable code.
CFLAGS = -g -O2

# Debuggers CFLAGS
# CFLAGS = -g -O -Wunused -Wall -ggdb -Wshadow -Wmissing-declarations

###### CHANGES BELOW HERE ONLY IF YOU KNOW WHAT YOU'RE DOING ######

SUBDIRS = src modules tools

OBJECTS = ${SOURCES:.c=.o}

all: tcm

build: tcm

clean:
	@${RM} -f DEBUG etc/tcm.pid
	@for i in $(SUBDIRS); do \
		echo "Cleaning $$i";\
		cd $$i;\
		${MAKE} clean; cd ..;\
	done
	-@if [ -f include/setup.h ] ; then \
	echo "To really restart installation, make distclean" ; \
	fi

cleandata:
	${RM} -f DEBUG etc/tcm.pid

distclean:
	@for i in $(SUBDIRS); do \
		echo "Distcleaning $$i";\
 		cd $$i;\
		${MAKE} distclean; cd ..;\
	done
	${RM} -f Makefile config.status config.cache config.log include/setup.h etc/tcm.pid
	${RM} -f DEBUG bin/tcm bin/mkpasswd etc/*.pref logs/*log logs/clone_log_*
	@echo "all:" > Makefile
	@echo "	@echo \"Run ./configure first, dumby\"" >> Makefile

.c.o:
	${CC} ${CPPFLAGS} ${CFLAGS} ${DEFINES} -c $<

tcm:
	-@if [ ! -f include/setup.h ] ; then \
		echo "Hmm...doesn't look like you've run configure..."; \
		echo "Doing so now."; \
		sh configure; \
	fi
	@for i in $(SUBDIRS); do \
		echo "Building $$i";\
		cd $$i;\
		${MAKE} build; cd ..;\
	done

lint:
	@for i in $(SUBDIRS); do \
		echo "Linting $$i";\
		cd $$i;\
		${MAKE} lint; cd ..;\
	done

depend:
	@for i in $(SUBDIRS); do \
		echo "Making Dependencies in $$i";\
		cd $$i;\
		${MAKE} depend; cd ..;\
	done

